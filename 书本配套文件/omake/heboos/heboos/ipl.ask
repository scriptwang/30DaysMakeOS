/* へぼOS用IPL copyright(C) 2003 川合秀実, KL-01 */

/* ASKAがいろいろうるさいので、とりあえず書いておく */
segment CODE(USE32, PARA);
default(code == CODE);

void readsec();

void header()
// MS-DOS互換のためのヘッダ
{
	asmout("[BITS 16]");
	ORG(0x7c00);
	asmout("JMP boot"); // ヘッダをスキップするためのジャンプ命令
	NOP();
	asmout("DB 'heboOS  '"); // OEM name & version.
	DW(512); // セクタ長(バイト単位)
	DB(1); // クラスタ長(セクタ単位)
	DW(1); // ブートセクタ長(セクタ単位)
	DB(2); // FATの数
	DW(0x00e0); // root directory entries.
	DW(2880); // 総セクタ数
	DB(0xf0); // media descriptor byte.
	DW(9); // 1つのFATの長さ(セクタ単位)
	DW(18); // 1トラックに収容されているセクタ数
	DW(2); // ヘッド数
	DD(0); // 不可視セクタ数
	DD(2880); // 総セクタ数
	DB(0, 0); /* unknown */
	DB(0x29);
	DD(0xffffffff);
	asmout("DB 'heboOS     '");
	asmout("DB 'FAT12   '");
}

void boot()
{
	SI = 33;
	CL = 1;
	AX = 0x0800;
	ES = AX;
	DS = AX;
	SS = AX;
	SP = 0xfffe;
	BX = 0x0100;
	readsec();
	CL = [DS:0x0102];
	BX = 0x0300;
	SI = 34;
	CL--;
	if (!= 0)
		readsec();
	JMP(0x0800, 0x0100);
}

void readsec()
{
	do {
		PUSH(ES);
		PUSH(SI);
		PUSH(BX);
		PUSH(DX);
		PUSH(CX);
		PUSH(AX);
		AX = SI;
		CL = 18;
		DIV(CL);
		CH = AL;
		DH = AL;
		CL = AH;
		(unsigned char) CH /= 2;
		DH &= 0x01;
		CL++;
		AX = 0x0201;
		DL = 0;
		INT(0x13);
		POP(AX);
		POP(CX);
		POP(DX);
		POP(BX);
		POP(SI);
		POP(ES);
		if (CF != 0)
			break;
		BX += 512;
		SI++;
		CLC();
		CL--;
	} while (!= 0);
	return;
}

void footer()
{
	asmout("RESB 0x7dfe - $");
	DW(0xaa55);
}

void FAT()
/* HEBOOS.SYSは64KBということにしておく */
/* だから64KBのFATチェインを */
{
	DB(0xf0, 0xff, 0xff, 0x03, 0x40, 0x00, 0x05, 0x60);
	DB(0x00, 0x07, 0x80, 0x00, 0x09, 0xa0, 0x00, 0x0b);
	DB(0xc0, 0x00, 0x0d, 0xe0, 0x00, 0x0f, 0x00, 0x01);
	DB(0x11, 0x20, 0x01, 0x13, 0x40, 0x01, 0x15, 0x60);
	DB(0x01, 0x17, 0x80, 0x01, 0x19, 0xa0, 0x01, 0x1b);
	DB(0xc0, 0x01, 0x1d, 0xe0, 0x01, 0x1f, 0x00, 0x02);
	DB(0x21, 0x20, 0x02, 0x23, 0x40, 0x02, 0x25, 0x60);
	DB(0x02, 0x27, 0x80, 0x02, 0x29, 0xa0, 0x02, 0x2b);
	DB(0xc0, 0x02, 0x2d, 0xe0, 0x02, 0x2f, 0x00, 0x03);
	DB(0x31, 0x20, 0x03, 0x33, 0x40, 0x03, 0x35, 0x60);
	DB(0x03, 0x37, 0x80, 0x03, 0x39, 0xa0, 0x03, 0x3b);
	DB(0xc0, 0x03, 0x3d, 0xe0, 0x03, 0x3f, 0x00, 0x04);
	DB(0x41, 0x20, 0x04, 0x43, 0x40, 0x04, 0x45, 0x60);
	DB(0x04, 0x47, 0x80, 0x04, 0x49, 0xa0, 0x04, 0x4b);
	DB(0xc0, 0x04, 0x4d, 0xe0, 0x04, 0x4f, 0x00, 0x05);
	DB(0x51, 0x20, 0x05, 0x53, 0x40, 0x05, 0x55, 0x60);
	DB(0x05, 0x57, 0x80, 0x05, 0x59, 0xa0, 0x05, 0x5b);
	DB(0xc0, 0x05, 0x5d, 0xe0, 0x05, 0x5f, 0x00, 0x06);
	DB(0x61, 0x20, 0x06, 0x63, 0x40, 0x06, 0x65, 0x60);
	DB(0x06, 0x67, 0x80, 0x06, 0x69, 0xa0, 0x06, 0x6b);
	DB(0xc0, 0x06, 0x6d, 0xe0, 0x06, 0x6f, 0x00, 0x07);
	DB(0x71, 0x20, 0x07, 0x73, 0x40, 0x07, 0x75, 0x60);
	DB(0x07, 0x77, 0x80, 0x07, 0x79, 0xa0, 0x07, 0x7b);
	DB(0xc0, 0x07, 0x7d, 0xe0, 0x07, 0x7f, 0x00, 0x08);
	DB(0x81, 0xf0, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00);
	DB(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00);
	RESB(4400);

	DB(0xf0, 0xff, 0xff, 0x03, 0x40, 0x00, 0x05, 0x60);
	DB(0x00, 0x07, 0x80, 0x00, 0x09, 0xa0, 0x00, 0x0b);
	DB(0xc0, 0x00, 0x0d, 0xe0, 0x00, 0x0f, 0x00, 0x01);
	DB(0x11, 0x20, 0x01, 0x13, 0x40, 0x01, 0x15, 0x60);
	DB(0x01, 0x17, 0x80, 0x01, 0x19, 0xa0, 0x01, 0x1b);
	DB(0xc0, 0x01, 0x1d, 0xe0, 0x01, 0x1f, 0x00, 0x02);
	DB(0x21, 0x20, 0x02, 0x23, 0x40, 0x02, 0x25, 0x60);
	DB(0x02, 0x27, 0x80, 0x02, 0x29, 0xa0, 0x02, 0x2b);
	DB(0xc0, 0x02, 0x2d, 0xe0, 0x02, 0x2f, 0x00, 0x03);
	DB(0x31, 0x20, 0x03, 0x33, 0x40, 0x03, 0x35, 0x60);
	DB(0x03, 0x37, 0x80, 0x03, 0x39, 0xa0, 0x03, 0x3b);
	DB(0xc0, 0x03, 0x3d, 0xe0, 0x03, 0x3f, 0x00, 0x04);
	DB(0x41, 0x20, 0x04, 0x43, 0x40, 0x04, 0x45, 0x60);
	DB(0x04, 0x47, 0x80, 0x04, 0x49, 0xa0, 0x04, 0x4b);
	DB(0xc0, 0x04, 0x4d, 0xe0, 0x04, 0x4f, 0x00, 0x05);
	DB(0x51, 0x20, 0x05, 0x53, 0x40, 0x05, 0x55, 0x60);
	DB(0x05, 0x57, 0x80, 0x05, 0x59, 0xa0, 0x05, 0x5b);
	DB(0xc0, 0x05, 0x5d, 0xe0, 0x05, 0x5f, 0x00, 0x06);
	DB(0x61, 0x20, 0x06, 0x63, 0x40, 0x06, 0x65, 0x60);
	DB(0x06, 0x67, 0x80, 0x06, 0x69, 0xa0, 0x06, 0x6b);
	DB(0xc0, 0x06, 0x6d, 0xe0, 0x06, 0x6f, 0x00, 0x07);
	DB(0x71, 0x20, 0x07, 0x73, 0x40, 0x07, 0x75, 0x60);
	DB(0x07, 0x77, 0x80, 0x07, 0x79, 0xa0, 0x07, 0x7b);
	DB(0xc0, 0x07, 0x7d, 0xe0, 0x07, 0x7f, 0x00, 0x08);
	DB(0x81, 0xf0, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00);
	DB(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00);
	RESB(4400);
}

void rootdir()
{
	asmout("DB 'HEBOOS  SYS',0x04");
	DB(0,0,0,0,0,0,0,0,0,0);
	DB(0, 0, 0, 0);
	DW(0x002);
	DD(64 * 1024);
	RESB(0x00df * 32);
}
