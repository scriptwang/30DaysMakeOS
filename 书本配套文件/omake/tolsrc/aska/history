

2001/12/06

<ASKA Ver1.0β1>
・構造体、初期化、if等の文、アセンブラキーワードの直接指定がまだ出来てない
・エイリアスは出来てるけどまだデバッグしてない
・キャストも出来てるけどまだデバッグしてない
・「=」の文は一般的なものしか対応してない。farポインタに代入するなどの
　処理はまだ書いてない。よく考えたら型のチェックもしてないなぁ
・今思いついたけどlocal変数でbAlias=falseならアドレスラベルだなぁ。必ず
　MASMに直すときに「#」をつけるようにしなきゃ（＝バグ）
・local変数はエイリアス以外は対応してない。この対応はかなり後の予定
・同様にして関数の引数も対応してない

<ASKA Ver1.0β2>
・アドレスラベル関係のバグを修正
・エイリアスは構造体関係以外は使えるはず
・if文、アセンブラキーワード直接指定が使えるようになった
　ちなみにif文はif〜gotoが使える
・密かにアドレスラベルの前方参照が出来ないことに気づく。どうしよう・・・

<ASKA Ver1.0β3>
・loop〜break文をサポートした。これに伴い、if〜gotoと同じくif〜breakにもラベル
　最適化処理を追加する
・構造体をサポートした。これに伴い、エイリアス関係のデバッグが終了
・キャスト関係のとりあえずのデバッグが終了（実は致命的だった・・・）
・配列やポインタの変数定義が実は出来なかったのを修正

<ASKA Ver1.0β4>
・ESPにベース属性がついてなかったのを修正
　（・・・じつは川合社長に指摘されて初めて気づいた）
・asmout文を追加した。追加したところでこれはアセンブラキーワード直指定と同
　じ意味だと気づく（汗・・・うーん、まあ、害はないからとりあえずつけとこう
・式文「=」に関して拡張代入と下位代入をサポートした。型チェックも厳密に
・あっ、即値そのものに関しては*とか&とか使えないや

<ASKA Ver1.0β5>
・関数の属性がnearにならないバグを修正（これも川合社長の指摘により発見）
・関数を書く前に一度もグローバル変数を宣言してないと落ちる致命的なバグを
　発見！・・・危険だなぁ・・・
・関数内でグローバル変数を宣言することのできるstaticキーワードを追加

<ASKA Ver1.0β6>
・/*〜*/型のコメントをサポートした
・includeだけではなく#includeも追加（同じのあっても意味無いけど）
・字句解析関係の致命的なバグを密かに修正。だからどこがなおったのかは秘密
・while文とdo〜while文をサポート
・continue文をサポート。これに伴いif〜continue文にラベル最適化処理を追加する
・for文は遅延書き込みを行わなければならないためにサポートが不可能であること
　がわかる(;_;)
・cmp reg,0の時はtest reg,regと最適化するようにした（協力：川合社長）
・mov reg,0の時はxor  reg,regと最適化するようにした（協力：川合社長）
・うざいのでレジスタの時は型指定を省略させた

<ASKA Ver1.0β7>
・sizeof演算子のサポート
・即値は数字とアドレス演算子&しか使えなかったが、[]の中の時のように
　いろいろな演算子を使うことが出来るようになった
・reg*=1,2,3,4,5,8,9とreg/=1,2,4,8とreg<<=imm,reg>>imm=が使えるようになった
・reg<<=1の時はadd reg,regと最適化するようにした（協力：川合社長）
・reg+=1、reg-=1をそれぞれinc reg、 dec regと最適化するようにした（同上）
・intキーワードを追加した（longと同じ〜）

<ASKA Ver1.0β8>
・farポインタ関係の処理を追加した

★これ以降は全てソース大整理までの暫定対応

<ASKA Ver1.0β9（未公開…の上にソースを紛失）>
・for(;;){}だけサポートした（つまりはloop文と同一）
・フラグ比較のサポート
・if(==)だけでなく、if(==0)のように0をつけるのも良いことにした
・2^nのかけ算をシフト演算に（協力：川合社長、Generator::CheckPower2()も）

<ASKA Ver1.0β10>
・ローカル変数のサポート
・それに伴い、default == [SS:EBP + &&];構文をサポート
・さらに、システム変数localをサポート
・EAX = DATA::"string\n";をサポート
・通常変数と配列の初期化が出来るようになった
・条件式でF,!F形式のサポート
・手動アライン（void [2];やint [1]など）
・segment CODE == ES;のサポート（asmout("assume ES:CODE");して、以降
　CODE:???がでてきたらES:???とする）

<ASKA Ver1.0β11>
・for文のサポート

<ASKA Ver1.0β12>
・アセンブラキーワード直指定に重大なバグが（汗
　引数に２つ以上レジスタを指定できないバグを修正。
・定数関係のバグを修正。
・変数宣言で","を使えるようにした。

<ASKA Ver1.0β13>
・構造体のメンバ宣言で","を使えるようにした。
・定数宣言で定数式を入れても良いことにした。
・セグメントレジスタへ代入できなかった超バグを修正（汗

<ASKA Ver1.0β14>
・エイリアス宣言時に、== SS:ESP + 28;のように定数式を書けなかったのを修正。

<ASKA Ver1.0β15>
・エイリアス宣言時に、エイリアスが使えなかったのを修正。
・エイリアス宣言時にsizeofを使っても反映されないバグを修正。
・[SS:0x1234]のような書き方ができなかったのを修正。
・offsetキャストとsegmentキャストが正常に働いていなかったのを修正。
・default(code == CODEseg);構文のサポート。これは関数のコードセグメント割付を
　省略するものである。

<ASKA Ver1.0β16>
・変更箇所不明

<ASKA Ver1.0β17>
・DW(1,2,3);がdw 1,12,13と展開されていたのを修正。
・ローカルラベル指定#とグローバルラベル指定@を追加。変数は不完全。前方参照不可。
・関数のデフォルトタイプをnearに変更。
・ルートスコープにasmoutを記述できるようにした。副作用に要注意。
・ルートスコープで変数定義できるようにした。
・デフォルトデータセグメントをサポート。ただし定数の数値割付は不可。
・default(local == SS:EBP);構文のサポート。
・逆に、default==[SS:EBP+&&];構文の非サポート。

<ASKA Ver1.0β18>
・文字列定数内で\n\r\t\0のエスケープ文字をサポートした。
・文字列定数の最後にデフォルトで\0をセットしていたのをセットしないようにした。
・WORK *work == DS:0x1000; DD((offset) work->def);が死んでいたので修正。
※ここでの変更は互換性に支障を来すおそれがあるため、注意してください。
　おかしいと思ったら連絡をお願いします。

<ASKA Ver1.0β19> Modified by RisaPapa
 2001/12/06
・英語にローカライズ
・エラー終了をコマンドの返り値に反映

<ASKA Ver1.0β20> Modified by hideyosi & I.Tak.
2003/08/01
・Linux対応 (-DLINUX)
・CRLF以外の改行コード(UNIX, Mac)と改行コード以外で終わるファイルに対応
・Usageに残っていたSJIS文字を修正
・エラーがないときはエラー数を表示しない
・最終行に改行がないソースで不具合が起こるバグを修正



<これからやるべきこと>
・配列で{}を用いた初期化
・ラベルの前方参照
・CFを伴う足し算引き算のサポート
・代入形式のフラグ操作（CF = 0;)
・if ((AL & 0x80) == 0)をTESTに展開する
・LOOP文を作る

・parserとgeneratorの再構築。そろそろソースが汚くなってきた（泣）
・ポインタをuseと独立に決める
・ifブロック中で、最後にreturn,break,continue,gotoが来たらjmpは
　省略して最適化する
・call文の直後にreturnがある場合はcallをjmpにしてreturnを消す最適化をする
　ただし、これはnear-call,near-returnかfar-call,far-returnの組しか
　できない。これ以外でやるとスタックがずれてハングる
・LEAの式文サポート
・unionのサポート
・構造体宣言中の、size()のサポート
・構造体宣言中の、align()のサポート
・構造体宣言中の、origin()のサポート
・コード記述中の、align()のサポート
・コード記述中の、origin()のサポート
・間接call、間接gotoのサポート
・デコードキャストのサポート（とりあえずは無視するだけでいい）
